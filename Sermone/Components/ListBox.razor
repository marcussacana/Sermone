<div id="ListBox">
    <ol>
        @for (int i = 0; i < Items?.Length; i++)
        {
            <ListBoxItem Checked="@Items[i].Checked" Value="@Items[i].Value" SubValue="@Items[i].SubValue" Selected="@(i == SelectedIndex)" ID="@i" Visible="@Items[i].Visible" VirtualChecked="@Items[i].VirtualChecked" VisibleIndex="@Items[i].VisibleIndex" @ref="Reference"/>
        }
    </ol>
</div>

@code {

    List<ListBoxItem> Refs = new List<ListBoxItem>();
    ListBoxItem Reference { set { Refs.Add(value); } }

    public Sermone.Types.ListBoxItemInfo[] Items { get; set; }

    public int SelectedIndex = 0;

    public void SetItems(Sermone.Types.ListBoxItemInfo[] Items) {
        Refs = new List<ListBoxItem>();
        this.Items = Items;
    }
    public void Refresh() => this.StateHasChanged();

    public void Refresh(int ItemID) {
#pragma warning disable BL0005
        Refs[ItemID].VirtualChecked = Items[ItemID].VirtualChecked;
        Refs[ItemID].VisibleIndex = Items[ItemID].VisibleIndex;
        Refs[ItemID].Selected = ItemID == SelectedIndex;
        Refs[ItemID].Checked = Items[ItemID].Checked;
        Refs[ItemID].Visible = Items[ItemID].Visible;
        Refs[ItemID].Value = Items[ItemID].Value;
        Refs[ItemID].SubValue = Items[ItemID].SubValue;
#pragma warning restore BL0005
        Refs[ItemID].Refresh();
    }

    public async Task EnsureItemVisible(int ItemID) {
        await Refs[ItemID].EnsureVisible();
    }
}
