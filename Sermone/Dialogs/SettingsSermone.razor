@inject IModalDialogService Modal
<table class="table table-striped table-condensed">
    <tbody>
        <tr>
            <td class="align-baseline align-middle" style="width: 13em;" data-toggle="tooltip" data-placement="auto" data-original-title="Language">@Parent.CurrentLanguage.Language</td>
            <td>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown">
                        <tooltip data-toggle="tooltip" data-placement="top" data-original-title="@Parent.CurrentLanguage.EnglishLanguageName">
                            @Parent.CurrentLanguage.NativeLanguageName
                            <span class="caret"></span>
                        </tooltip>
                    </button>
                    <ul class="dropdown-menu">
                        @for (int i = 0; i < Program.AllLanguages.Length; i++)
                        {
                            var ID = i;
                            var Language = Program.AllLanguages[i];
                            var Class = "dropdown-item ";
                            if (Parent.Configs.Language == i)
                            {
                                Class += "active";
                            }

                            <li data-toggle="tooltip" data-placement="right" title="@Language.EnglishLanguageName">
                                <a class="@Class" @onclick="() => Parent.SetLanguage(ID)" href="#">
                                    @Language.NativeLanguageName
                                </a>
                            </li>
                        }
                    </ul>
                </div>

            </td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" style="width: 13em;">
                @Parent.CurrentLanguage.Username
            </td>
            <td>
                <input type="text" class="form-control" @bind-value:event="onchange" @bind-value="@Parent.PasteUsername">
            </td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" style="width: 13em;">
                @Parent.CurrentLanguage.Password
            </td>
            <td>
                <input type="password" class="form-control" @bind-value:event="onchange" @bind-value="@Parent.PastePassword">
            </td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" style="width: 13em;">
                @Parent.CurrentLanguage.BackupOn
            </td>
            <td>
                <input type="text" class="form-control" @bind-value:event="onchange" @bind-value="@Parent.BackupOn">
            </td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" style="width: 13em;">
				@Parent.CurrentLanguage.Theme
			</td>
            <td>
                <button class="btn btn-secondary" @onclick="@CustomCss">@Parent.CurrentLanguage.CustomCss</button>
            </td>
        </tr>
    </tbody>
</table>


@code {
    [Parameter]
    public Settings Parent { get; set; }

    public async Task CustomCss()
    {
        var Rst = await Modal.ShowDialogAsync<TextArea>(Engine.Language.CustomCss, parameters: new ModalDialogParameters() {
            { "Text",      Parent.CustomCSS },
            { "AllowSave", true             }
        });

        if (!Rst.Success)
            return;

        Parent.CustomCSS = (string)Rst.ReturnParameters["Text"];
    }
}
