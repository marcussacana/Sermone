@page "/"

@using Blazor.ModalDialog
@inject IModalDialogService ModalDialog

<ListBox @ref="Engine.DialogueBox" />

<DialogueEditor @ref="Engine.EditorBox" />

@code {

    protected override async Task OnInitializedAsync()
    {
        if (Engine.Plugins == null)
            Program.Navigate("/Initialize");
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && Engine.Plugins != null)
        {
            Engine.IndexPage = this;
            await ModalDialog.ShowDialogAsync<About>("Sermone", new ModalDialogOptions() { BackgroundClickToClose = true, ShowCloseButton = true });

            if (SacanaWrapper.RemoteWrapper.CacheChanged)
            {
#if !DEBUG
                SacanaWrapper.RemoteWrapper.CacheChanged = false;
                Engine.Toast.ShowInfo(Engine.Language.BackgroundTaskWarning, Engine.Language.Loading);
                await foreach (var Save in Sermone.Tools.Initializer.SaveCache(async (a) => { await JSWrapper.SetTile($"{Engine.Language.Loading} ({a})"); }))
                {
                    await Engine.DoEvents();
                }
#endif
            }
            await JSWrapper.SetTile("Sermone");
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    public void Refresh() {
        Engine.EditorBox.Refresh();
        this.StateHasChanged();
    }
}