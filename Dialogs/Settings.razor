@using Sermone.Types
@using Sermone.Languages
@inject IModalDialogService Modal

<table class="table table-striped table-condensed">
    <tbody>
        <tr>
            <td class="align-baseline align-middle" style="width: 13em;" data-toggle="tooltip" data-placement="auto" data-original-title="Language">@CurrentLanguage.Language</td>
            <td>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown">
                        <tooltip data-toggle="tooltip" data-placement="top" data-original-title="@CurrentLanguage.EnglishLanguageName">
                            @CurrentLanguage.NativeLanguageName
                            <span class="caret"></span>
                        </tooltip>
                    </button>
                    <ul class="dropdown-menu">
                        @for (int i = 0; i < Program.AllLanguages.Length; i++)
                        {
                            var ID = i;
                            var Language = Program.AllLanguages[i];
                            var Class = "dropdown-item ";
                            if (Configs.Language == i)
                                Class += "active";

                            <li data-toggle="tooltip" data-placement="right" title="@Language.EnglishLanguageName">
                                <a class="@Class" @onclick="() => SetLanguage(ID)" href="#">
                                    @Language.NativeLanguageName
                                </a>
                            </li>
                        }
                    </ul>
                </div>

            </td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" data-toggle="tooltip" data-placement="auto" data-original-title="@CurrentLanguage.DenyPatternTooltip">@CurrentLanguage.DennyPattern</td>
            <td>
                <input type="text" class="form-control" @bind-value:event="onchange" @bind-value="@DenyList">
            </td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" data-toggle="tooltip" data-placement="auto" data-original-title="@CurrentLanguage.IgnorePatternTooltip">@CurrentLanguage.IgnorePattern</td>
            <td>
                <input type="text" class="form-control" @bind-value:event="onchange" @bind-value="@IgnoreList">
            </td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" data-toggle="tooltip" data-placement="auto" data-original-title="@CurrentLanguage.QuotesPatternTooltip">@CurrentLanguage.QuotesPattern</td>
            <td>
                <input type="text" class="form-control" @bind-value:event="onchange" @bind-value="@QuoteList">
            </td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" data-toggle="tooltip" data-placement="auto" data-original-title="@CurrentLanguage.BreaklineTooltip">@CurrentLanguage.Breakline</td>
            <td>
                <input type="text" class="form-control" @bind-value:event="onchange" @bind-value="@Breakline">
            </td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" data-toggle="tooltip" data-placement="auto" data-original-title="@CurrentLanguage.AcceptableRangeTooltip">@CurrentLanguage.AcceptableRange</td>
            <td>
                <input type="text" class="form-control" @bind-value:event="onchange" @bind-value="@AcceptableRanges">
            </td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" data-toggle="tooltip" data-placement="auto" data-original-title="@CurrentLanguage.AsianModeTooltip">@CurrentLanguage.AsianMode</td>
            <td><input type="checkbox" @bind-value:event="onchange" @bind-value="@FromAsian"></td>
        </tr>
        <tr>
            <td class="align-baseline align-middle" data-toggle="tooltip" data-placement="auto" data-original-title="@CurrentLanguage.SensitivityTooltip">@CurrentLanguage.Sensitivity</td>
            <td>
                <input type="text" class="form-control" @bind-value:event="onchange" @bind-value="@Sensitivity">
            </td>
        </tr>
    </tbody>
</table>
<div class="position-relative">
    <button @onclick="SaveClicked" class="btn btn-primary right">@CurrentLanguage.Save</button>
</div>
<br />
<br />

@code {

    public ILang CurrentLanguage => Program.AllLanguages[Configs.Language];

    public Config? _Configs;
    public Config Configs
    {
        get
        {
            if (_Configs != null)
                return _Configs.Value;

            _Configs = Engine.Settings;
            return _Configs.Value;
        }
        set { _Configs = value; }
    }

    public string DenyList {
        get { return Configs.DenyList; }
        set {
            var TmpConf = Configs;
            TmpConf.DenyList = value;
            Configs = TmpConf;
        }
    }

    public string IgnoreList
    {
        get { return Configs.IgnoreList; }
        set
        {
            var TmpConf = Configs;
            TmpConf.IgnoreList = value;
            Configs = TmpConf;
        }
    }

    public string QuoteList
    {
        get { return Configs.QuoteList; }
        set
        {
            var TmpConf = Configs;
            TmpConf.QuoteList = value;
            Configs = TmpConf;
        }
    }

    public string Breakline
    {
        get { return Configs.Breakline; }
        set
        {
            var TmpConf = Configs;
            TmpConf.Breakline = value;
            Configs = TmpConf;
        }
    }

    public string AcceptableRanges
    {
        get { return Configs.AcceptableRanges; }
        set
        {
            var TmpConf = Configs;
            TmpConf.AcceptableRanges = value;
            Configs = TmpConf;
        }
    }

    public bool FromAsian
    {
        get { return Configs.FromAsian; }
        set
        {
            var TmpConf = Configs;
            TmpConf.FromAsian = value;
            Configs = TmpConf;
        }
    }

    public int Sensitivity
    {
        get { return Configs.Sensitivity; }
        set
        {
            var TmpConf = Configs;
            TmpConf.Sensitivity = value;
            Configs = TmpConf;
        }
    }

    void SetLanguage(int ID)
    {
        var TmpConf = Configs;
        TmpConf.Language = ID;
        Configs = TmpConf;
        Refresh();
    }

    void SaveClicked()
    {
        Engine.Settings = Configs;
        Modal.Close(true);
    }

    public void Refresh() => this.StateHasChanged();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Engine.JSRuntime.InvokeVoidAsync("EnableTooltip");
    }
}
